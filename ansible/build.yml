---
- hosts: backup
  roles:
    - ten7.flightdeck_base
  tasks:
    - name: Install necessary software.
      apk:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - "curl"
        - "git"
        - "patch"
        - "mariadb-client"
        - "openssh-client"
        - "php7"
        - "php7-curl"
        - "php7-dom"
        - "php7-json"
        - "php7-mbstring"
        - "php7-openssl"
        - "php7-pcntl"
        - "php7-posix"
        - "php7-phar"
        - "php7-tokenizer"
        - "py3-mysqlclient"
        - "py3-pip"
        - "rsync"
        - "rclone"
        - "tree"
      notify:
        - clear apk cache
    - name: Install build deps
      shell: >
        apk add --virtual build-deps
        gcc
        libffi-dev
        python3-dev
        linux-headers
        musl-dev
        openssl-dev
      notify: remove build deps
    - name: Install the AWS cli
      pip:
        name:
          - "botocore"
          - "boto3"
          - "awscli"
          - "s3cmd"
          - "gsutil"
        extra_args: "--ignore-installed"
    - name: Change the ownership of s3cmd due to permission wonkiness
      file:
        path: "/usr/bin/s3cmd"
        owner: "backup"
        group: "backup"
        mode: "u=rx,g=rx,o="
    - name: Download the Platform.sh cli
      get_url:
        url: "{{ platformsh_cli_url }}"
        dest: "/usr/local/bin/platform"
        owner: "backup"
        group: "backup"
        mode: "u=rx,g=rx,o="
    - name: Install Platform.sh cli
      shell: >
        /usr/local/bin/platform self:install
    - name: Deploy key scripts.
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "backup"
        group: "backup"
        mode: "u=rx,g=rx,o="
      loop:
        - src: "templates/tractorbeam.sh.j2"
          dest: "/usr/local/bin/tractorbeam"
    - name: Install Pantheon Terminus
      include_role:
        name: "socketwench.pantheon_terminus"
    - name: Set host key checking to accept new.
      lineinfile:
        path: "/home/backup/.ssh/config"
        regexp: "StrictHostKeyChecking="
        line: "StrictHostKeyChecking=accept-new"
        state: present
        create: yes
        owner: "backup"
        group: "backup"
        mode: "u=rx,g=rx,o="
    - name: Create the backup directory
      file:
        path: "/backups"
        state: directory
        owner: "backup"
        group: "backup"
        mode: "u=rwx,g=rwx,o="
    - name: Update permissions of key directories
      file:
         path: "{{ item }}"
         state: directory
         owner: "backup"
         group: "backup"
         mode: "u=rwx,g=rwx,o="
      loop:
        - "/home/backup/.ssh"
  handlers:
    - name: remove build deps
      shell: >
        apk del build-deps
    - name: clear apk cache
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/*"
        - "/var/cache/apk/*"
